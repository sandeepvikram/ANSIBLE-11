#ANSIBLE DAY PRACTICE

CREATE 2 INSTANCES WITH UBUNTU 18( ANY VERSION IS FINE BUT HERE WE TOOK 18) 
LOGIN INTO THE SERVER
COMMANDS:
   ''' 
     sudo vi /etc/ssh/sshd_config
     PASSWORD AUTHENTICATION YES      (CHANGE PASSWD AUTH FROM NO TO YES)
     service sshd restart
   '''
NOW CREATE USER
'''
  sudo adduser devops                  (GIVE PASSWD AND ENTER FEW TIMES AND USER IS CREATED)
  sudo visudo                          ( CHANGE PERSMISSIONS TO GIVE ACCESS devops USER TO ACCESS  INSTANCE WITHOUT PEM FILE)
   '''     
     devops ALL=(ALL:ALL) NOPASSWD:ALL    (ADD THIS COMMAND IN VISUDO IN SUDO COMMAND, WE ADD THIS COMMAND TO HAVE DEVOPS USER TO PERFORM COMMANDS WITHOUT THE PASSWORD AUTH EVERYTIME)

NOW GENERATE KEYS WITH SSH-KEYGEN AND COPY THE KEYS TO NODES WITH THE COMMAND ''' ssh-copy-id devopss@privateip'''
NOW YOU CAN LOGIN INTO NODES FROM ANSIBLE CONTROL NODE WITH JUST THE COMMAND ''' ssh privateip'''

 NOW YOU CAN LOGIN TO ansible control node INSTANCE anytime WITH COMMAND
     ''' ssh devops@IP'''

 NOW DO THIS FOR NODE 1 AND NODE 2
 SO WE HAVE TOTAL 3 DEVOPS USERS IN ONE ANSIBLE CONTROL NODE AND 2 NODES

 ##NOW THAT WE CONFIGURED ALL THE NODES WE HAVE TO INSTALL ANSIBLE ON ANSIBLE CONTROL NODE###
    '''python --version'''
 ANSIBLE INSTALLATION COMMANDS FOR UBUNTU (SEARCH FOR OS SPECIFIC INSTALLATION )   
    '''$ sudo apt update
       $ sudo apt install software-properties-common
       $ sudo add-apt-repository --yes --update ppa:ansible/ansible
       $ sudo apt install ansible 

       ansible --version


  LOOK ONCE AT ANSIBLE CONFIG FILE
    ''' sudo vi  /etc/ansible/ansible.cfg'''


  NOW LETS CREATE A KEYS FOR ACCESSING NODES FROM ANSIBLE CONTROL NODE(ACN) 
     '''ssh-keygen'''
  COPY THE KEYGEN KEY PUBLIC KEY TO NODE WITH THEIR PRIVATE IP
    ''' ssh-copy-id devopss@IP
  WE DO THIS BECAUSE IT IS SECURE AND IF YOU OBSERVE WE DIDNT METIONED DEVOPSS WHILE COPYING ID TO NODE BECAUSE IT DIRECTLY RECOGNISES WE ARE DEVOPSS USER SO WE DONT DO NEED TO SPECIFY IT.

  CREATE HOSTS FILE AND GIVE PRIVATE IP's OF ALL THE NODES     

  ALWAYS RUN THE MANUAL STEPS BEFORE GOING TO RUN THE COMMANDS IN ANSIBLE (refer HEREhttps://directdevops.blog/2021/05/11/devops-classroom-series-11-may-2021/ )

  ###DAY 2###       
In this we will try to create a HOSTS FILE and create yml file WITH ANSIBLE COMMANDS

IN THE LINE 47 WE SEE A LINK TO INSTALL A SPRING BOOT APPLICATION NAMED SPRING PET CLINIC, AFTER WE HAVE EXECUTED MANUAL STEPS.
  1  sudo apt update
  2  sudo apt install openjdk-11-jdk -y
  3  sudo mkdir /usr/share/springpetclinic
  4  wget https://referenceapplicationskhaja.s3-us-west-2.amazonaws.com/spring-petclinic-2.4.2.jar
  5  sudo cp spring-petclinic-2.4.2.jar /usr/share/springpetclinic/
  6  sudo adduser springbootuser
  7  sudo chown springbootuser:springbootuser /usr/share/springpetclinic/spring-petclinic-2.4.2.jar
  8  sudo chmod 500 /usr/share/springpetclinic/spring-petclinic-2.4.2.jar
  9  sudo vi /etc/systemd/system/springpetclinic.service
 10  sudo systemctl enable springpetclinic.service
 11  sudo systemctl start springpetclinic.service
 12  sudo systemctl status springpetclinic.service

 FROM THIS MANUAL STEPS WE TRY TO CREATE ANSIBLE PLAYBOOK

### FROM LINUX M/C TO ACCESS GITHUB REPO USE GIT CLONE COMMAND AND TO GET THE LATEST CHANGES USE GIT PULL####

NOW WE DO WRITE A PART OF ANSIBLE PLAYBOOK AND EXECUTE IT. 
(REFER 
https://github.com/sandeepvikram/ANSIBLE-11/commit/3bc09ebcf8bf8c963c804ca451d990e9732e738a)
'''
---
- name: Deploy Spring Pet Clinic as a service
  hosts: all
  become: yes
  tasks:
    - name: Update Ubuntu packages and install open-JDK11
      apt:
        name: openjdk-11-jdk
        update_cache: yes
        state: present
    - name: Create a Spring pet Clinic Directory
      anisble.builtin.file:
        path: /usr/share/springpetclinic
        state: directory
    - name: Download SpringPet Clinic
      get_url:
        url:   https://referenceapplicationskhaja.s3-us-west-2.amazonaws.com/spring-petclinic-2.4.2.jar
        dest: /usr/share/springpetclinic/

  '''

############NOW WE HAVE SEEN A ERROR/REALIZATION THAT WHEN WE TRIED TO EXECUTE PLAYBOOK FROM THE UBUNTU CONTROL NODE IT THRE AN ERROR BECAUSE WE HAVE TO LOGIN INTO THE DEVOPS USER WE HAVE CREATED AND WE SHOULD EXECUTE THE STEPS.###############
############ALWAYS AFTER STOPPING AND STARTING THE CHECK THE COMMANDS BEFORE EXECUTING THE PLAYBOOKS I.E THE CONNECTION B/W NODES, SSH, SSH-KEYGEN, VERSIONS ETC##################
############ ANOTHER ERROR YOU ARE DOING IS AFTER EXECUTING THE PLAYBOOK FROM ANSIBLE CONTROL NODE YOU ARE EXITING THE INSTANCE AND TRYING TO SSH INTO NODE FOR OBSERVING CHANGES. BUT YOU SHOULD DIRECTLY LOGIN FROM THE ANSIBLE CONTROL NODE WITH '''SSH "PRIVATE IP"'''
########### ALWAYS LOGIN INTO DEVOPS USER WE HAVE CREATED BEFORE EXECUTING THE COMMANDS I.E '''ssh devops@"IP"'''

REFER THE NEXT STEPS OF CREATING A USER NAMED SPRINGBOOT (REFER https://github.com/sandeepvikram/ANSIBLE-11/commit/4557aa411fb67903e769088da642132c64bd3a02)
TO LOOK INTO THE USER CREATED LOGIN INTO NODE AND  
         '''cat /etc/passwd'''

NOW NEXT STEP IS TO CHANGE OWNERSHIP TO springbootuser (REFER https://github.com/sandeepvikram/ANSIBLE-11/commit/fe3f95c8408c37f30c720a4bc51ed18b9166987d)
AND TYPE '''ls -l /usr/share/springpetclinic''' to look into the change of OWNERSHIP.

NOW THE NEXT STEP IS TO CREATE A FILE NAMED springpetclinic.SERVICE AS IT IS THE WEB SERVICE. NOW IN THE MANUAL STEPS IN THE ABOVE LIST OF STEPS STEP 9 WE SEE HAVE CREATED A springpetclinic.SERVICE FILE WITH ''vi'' COMMAND 
AND IN ANSIBLE WE WILL CREATE IT IN THE ANSIBLE CONTROL NODE AND COPY IT INTO THE NODE EVERY TIME THE COMMANDS ANSIBLE PLAYBOOK IS EXECUTED(WHICH WE WILL SEE IN FUTURE THAT IS NOT A GOOD PRACTICE)
REFER(https://github.com/sandeepvikram/ANSIBLE-11/commit/fe3f95c8408c37f30c720a4bc51ed18b9166987d)

REFER HERE FOR THE ALL CHANGES DONE https://github.com/sandeepvikram/ANSIBLE-11/commit/fe3f95c8408c37f30c720a4bc51ed18b9166987d

###DAY 3###
###VARIABLES(VARS)###:
IF WE OBSERVE "https://github.com/sandeepvikram/ANSIBLE-11/commit/fe3f95c8408c37f30c720a4bc51ed18b9166987d" THIS CODE WE SEE THAT WE HAVE DEFINED THE ALL THE INFORMATION IN A HARCODED FASHION I.E IF WE LOOK AT THE 
PACKAGE INSTALLED HERE JAVA 11 AND IF THERE IS A NEW VERSION IN FUTURE WE HAVE TO AGAIN CHANGE IT AND IN THE REAL LIFE THE CODE IS VERY LARGE AND COMPLEX SO WE DEFINE VARIABLES.
REFER HERE FOR VARIABLES "https://github.com/sandeepvikram/ANSIBLE-11/blob/master/Springboot%20Application/spc-deploy.yml"

WE HAVE ALSO SEEN THE ADDING OF DEBUG MESSAGES REFER "https://github.com/sandeepvikram/ANSIBLE-11/commit/00457a452336494655af7ac1843e94149e4245b0"
ALSO REFER "https://github.com/sandeepvikram/ANSIBLE-11/commit/db16d94510bb2ee9bf6dd232d6132fd513c01fcd"

IF YOU WANT TO KNOW MORE ABOUT WHAT IS HAPPENING IN THE BACKGROUND USE
   ''' ansible-playbook -i hosts spc-deploy.yml -vvvv'''
   HERE -vvvv gives more info and decreasing by on v gives less info.

USE ''' ansible-playbook --help''' FOR GETTING INFO ABOUT PLAYBOOKS

##IMPORTANT INFO : WE CAN CHANGE VARS IN 3 LOCATION DURING EXECUTING A PLAYBOOKS 
   1)IN THE PLAYBOOKS
   2)IN THE COMMAND LINE WITH USING -e and changing VARS message to something else.
   3)IN THE HOSTS FILE
AND THERE IS A HIEARCHY >>>>>>     2>3>1     <<<<<<


IN ANSIBLE IF WE HAVE INVENTORIES, THESE CONTAIN INFO ABOUT YOUR HOSTS LISTS I.E IN AN ORGANIZATION WE HAVE DIFFERENT SERVER's IP ADDR FOR DIFFERENT TASKS SAY DBSERVER, APPSERVER, ETC
IF WE TYPE '''ansible-playbook --help''' WE SEE COMMAND '''--list-hosts'''

SO IF WE HAVE HOSTS IN AN INVENTORY WE CAN USE --list-hosts command and ![Preview](G:\AWS FOLDERS\QUALITY THOUGHT\ANSIBLE\ANSIBLE1) THIS IS INI FORMAT.

WE CAN ALSO WRITE THE INVENTORY IN YAML FORMAT ALSO
   all:
  hosts:
    192.168.10.11:
  children:
    webserver:
      hosts:
        web1.qt.com:
        web2.qt.com:
    dbserver:
      hosts:
        db1.qt.com:
        db2.qt.com:


IN INVENTORY WE GIVE A RANGE OF HOSTS I.E WE CAN GIVE MULTPLE ADDRESS IF THEY BELONG TO SAME FAMILY
 172.31.27.10

[webserver]
web[01:15].vk.com
web2.vk.com

[appserver]
app[01:25].vk.com
ap[01:30:2].vk.com  >>>>>>>>HERE WE HAVE 30 SERVERS BUT THE ANSIBLE IF EXECUTED TAKES ONLY HOSTS SKIPPING 2 IN NUMBER

HERE WE WILL GET WEN.VK.COM FROM 1 TO 15 AND APP.VK.COM TO 1 TO 25 

REFER HERE FOR THE O/P:
devopss@ip-172-31-16-254:~$ ansible -i hosts webserver --list-hosts
  hosts (16):
    web01.vk.com
    web02.vk.com
    web03.vk.com
    web04.vk.com
    web05.vk.com
    web06.vk.com
    web07.vk.com
    web08.vk.com
    web09.vk.com
    web10.vk.com
    web11.vk.com
    web12.vk.com
    web13.vk.com
    web14.vk.com
    web15.vk.com
    web2.vk.com
devopss@ip-172-31-16-254:~$ ansible -i hosts all --list-hosts
  hosts (43):
    172.31.27.10
    app01.vk.com
    app02.vk.com
    app03.vk.com
    app04.vk.com
    app05.vk.com
    app06.vk.com
    app07.vk.com
    app08.vk.com
    app09.vk.com
    app10.vk.com
    app11.vk.com
    app12.vk.com
    app13.vk.com
    app14.vk.com
    app15.vk.com
    app16.vk.com
    app17.vk.com
    app18.vk.com
    app19.vk.com
    app20.vk.com
    app21.vk.com
    app22.vk.com
    app23.vk.com
    app24.vk.com
    app25.vk.com
    app2.vk.com
    web01.vk.com
    web02.vk.com
    web03.vk.com
    web04.vk.com
    web05.vk.com
    web06.vk.com
    web07.vk.com
    web08.vk.com
    web09.vk.com
    web10.vk.com
    web11.vk.com
    web12.vk.com
    web13.vk.com
    web14.vk.com
    web15.vk.com
    web2.vk.com



####DAY 4##########

TODAY WE HAVE CREATED GROUP VARS AND HOST VARS, THEY ARE SIMPLY GROUPING THE VARIABLES. I.E IN THE PLAYBOOK WE HAVE SEEN THAT WE DEFINED VARS IN THE BEGININING OF THE
PLAYBOOK. IN REAL WORLD WE DEFINING VARIABLES LIKE USER AS SPRINGBOOTUSER OR JAVA VERSION AS OPENJDK 11 IS VERY UNPROFESSIONAL. SO WE GROUP THEM IN OTHER FILE NAMES VARS. 
THIS LOOKS PROFESSIONAL.

SO WE CREATE A GROUP_VARS FOR GROUPING VARIABLES AND HOSTS_VARS FOR GROUPING HOSTS IN THE SAME DIRECTORY WHERE WE HAVE ALL THE PLAYBOOKS AND SERVICE AND HOSTS 
DEFINED.

NOW THAT WE HAVE SEEN WHY WE DO THAT, WE HAVE REFER https://github.com/sandeepvikram/ANSIBLE-11/commit/c70b1752a83df6b7cd0c4308febe4556282690e8
HERE WE SIMPLY WROTE SYNTAX DIFFERENTLY AND WE GOT ERROR. SO WE CORRECTED IT HERE.


  
